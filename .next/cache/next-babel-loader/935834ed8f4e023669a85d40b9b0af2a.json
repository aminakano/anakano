{"ast":null,"code":"var _jsxFileName = \"/Users/aminakano/workspace/anakano/pages/jp/work.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Layout from \"../../components/MyLayout\";\nimport { Component } from \"react\";\nimport Main from \"../../components/Main\";\nimport data from \"../../public/json/data.json\";\nimport WorkTitle from \"../../components/Work/WorkTitle\";\nimport WorkDesc from \"../../components/Work/WorkDesc\";\nimport WorkSlide from \"../../components/Work/WorkSlide\";\nimport Arrow from \"../../components/Work/Arrow\";\nimport SlideImages from \"../../components/Work/SlideImages\"; //todo: create trigger functions\n\nconst work = data.work;\n\nclass Page extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      count: 0\n    };\n  }\n\n  render() {\n    const styles = {\n      container: {\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\"\n      },\n      list: {\n        display: \"flex\",\n        justifyContent: \"center\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n        margin: \"2rem\"\n      }\n    };\n    const contents = work.map((item, i) => __jsx(\"div\", {\n      key: i,\n      style: styles.list,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 7\n      }\n    }, __jsx(WorkTitle, {\n      title: item.title,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }\n    }), __jsx(SlideImages, {\n      img: item.img,\n      url: item.url,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }\n    }), __jsx(WorkDesc, {\n      desc: item.content,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }\n    })));\n\n    const trigger = () => {\n      this.setState(state => {\n        return state.count < work.length - 1 ? {\n          count: state.count + 1\n        } : {\n          count: 0\n        };\n      });\n    };\n\n    const reverseTrigger = () => {\n      this.setState(state => {\n        return state.count === 0 ? {\n          count: work.length - 1\n        } : {\n          count: state.count - 1\n        };\n      });\n    };\n\n    return __jsx(React.Fragment, null, __jsx(Main, {\n      bg: \"#25252b\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }\n    }, __jsx(WorkSlide, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }\n    }, __jsx(Arrow, {\n      direction: \"prev\",\n      inner: \"prev_inner\",\n      triggers: this.reverseTrigger,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }\n    }), contents[this.state.count], __jsx(Arrow, {\n      direction: \"next\",\n      inner: \"next_inner\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }\n    }))));\n  }\n\n}\n\nexport default Layout(Page);","map":{"version":3,"sources":["/Users/aminakano/workspace/anakano/pages/jp/work.js"],"names":["Layout","Component","Main","data","WorkTitle","WorkDesc","WorkSlide","Arrow","SlideImages","work","Page","constructor","props","state","count","render","styles","container","display","alignItems","justifyContent","list","flexDirection","margin","contents","map","item","i","title","img","url","content","trigger","setState","length","reverseTrigger"],"mappings":"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","sourcesContent":["import Layout from \"../../components/MyLayout\";\nimport { Component } from \"react\";\nimport Main from \"../../components/Main\";\nimport data from \"../../public/json/data.json\";\n\n\nimport WorkTitle from \"../../components/Work/WorkTitle\";\nimport WorkDesc from \"../../components/Work/WorkDesc\";\nimport WorkSlide from \"../../components/Work/WorkSlide\";\nimport Arrow from \"../../components/Work/Arrow\";\nimport SlideImages from \"../../components/Work/SlideImages\";\n\n//todo: create trigger functions\nconst work = data.work;\n\nclass Page extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { count: 0 };\n  }\n\n  render () {\n    const styles = {\n      container: {\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n      },\n      list: {\n        display: \"flex\",\n        justifyContent: \"center\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n        margin: \"2rem\",\n      },\n    };\n    const contents = work.map((item, i) => (\n      <div key={i} style={styles.list}>\n        <WorkTitle title={item.title} />\n        <SlideImages img={item.img} url={item.url} />\n        <WorkDesc desc={item.content} />\n      </div>\n    ))\n\n    const trigger = () => {\n      this.setState(state => {\n        return state.count < work.length - 1\n          ? { count: state.count + 1 }\n          : { count: 0 };\n      });\n    }\n\n    const reverseTrigger = () => {\n      this.setState(state => {\n        return state.count === 0\n          ? { count: work.length - 1 }\n          : { count: state.count - 1 }\n      });\n    }\n\n    return (\n      <>\n        <Main bg=\"#25252b\">\n          <WorkSlide>\n            <Arrow direction=\"prev\" inner=\"prev_inner\" triggers={this.reverseTrigger} />\n            {contents[this.state.count]}\n            <Arrow direction=\"next\" inner=\"next_inner\" />\n            {/* <div style={styles.container}>{contents[this.state.count]}</div> */}\n          </WorkSlide>\n        </Main>\n      </>\n    );\n  }\n}\n\nexport default Layout(Page);"]},"metadata":{},"sourceType":"module"}