{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/aminakano/workspace/anakano/components/Carrousel.js\";\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Glide from \"@glidejs/glide\";\nimport { useState, useEffect } from \"react\";\n\nvar Carrousel = function Carrousel(_ref) {\n  var _ref$element = _ref.element,\n      element = _ref$element === void 0 ? \"glide\" : _ref$element,\n      options = _ref.options,\n      children = _ref.children;\n\n  var _useState = useState(new Glide(\".\".concat(element), options)),\n      slider = _useState[0];\n\n  useEffect(function () {\n    slider.mount(); // subscribe to an event\n\n    slider.on(\"run.before\", function (event) {// ... do something cool here\n    }); // cleanup when unmounting component\n\n    return function () {\n      return slider.destroy();\n    };\n  }, []);\n  return __jsx(\"div\", {\n    className: element,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: \"glide__track\",\n    \"data-glide-el\": \"track\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }\n  }, __jsx(\"ul\", {\n    className: \"glide__slides\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }\n  }, children.map(function (slide, index) {\n    return React.cloneElement(slide, {\n      key: index,\n      className: \"\".concat(slide.props.className, \" glide__slide\")\n    });\n  }))));\n};\n\nexport default Carrousel;","map":{"version":3,"sources":["/Users/aminakano/workspace/anakano/components/Carrousel.js"],"names":["Glide","useState","useEffect","Carrousel","element","options","children","slider","mount","on","event","destroy","map","slide","index","React","cloneElement","key","className","props"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,gBAAlB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;AAGA,IAAMC,SAAS,GAAG,SAAZA,SAAY,OAA8C;AAAA,0BAA3CC,OAA2C;AAAA,MAA3CA,OAA2C,6BAAjC,OAAiC;AAAA,MAAxBC,OAAwB,QAAxBA,OAAwB;AAAA,MAAfC,QAAe,QAAfA,QAAe;;AAAA,kBAC7CL,QAAQ,CAAC,IAAID,KAAJ,YAAcI,OAAd,GAAyBC,OAAzB,CAAD,CADqC;AAAA,MACvDE,MADuD;;AAE9DL,EAAAA,SAAS,CAAC,YAAM;AACdK,IAAAA,MAAM,CAACC,KAAP,GADc,CAGd;;AACAD,IAAAA,MAAM,CAACE,EAAP,CAAU,YAAV,EAAwB,UAACC,KAAD,EAAW,CACjC;AACD,KAFD,EAJc,CAQd;;AACA,WAAO;AAAA,aAAMH,MAAM,CAACI,OAAP,EAAN;AAAA,KAAP;AACD,GAVQ,EAUN,EAVM,CAAT;AAWA,SACE;AAAK,IAAA,SAAS,EAAEP,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,cAAf;AAA8B,qBAAc,OAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,SAAS,EAAC,eAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGE,QAAQ,CAACM,GAAT,CAAa,UAACC,KAAD,EAAQC,KAAR,EAAkB;AAC9B,WAAOC,KAAK,CAACC,YAAN,CAAmBH,KAAnB,EAA0B;AAC/BI,MAAAA,GAAG,EAAEH,KAD0B;AAE/BI,MAAAA,SAAS,YAAKL,KAAK,CAACM,KAAN,CAAYD,SAAjB;AAFsB,KAA1B,CAAP;AAID,GALA,CADH,CADF,CADF,CADF;AAcD,CA3BD;;AA6BA,eAAef,SAAf","sourcesContent":["import Glide from \"@glidejs/glide\";\nimport { useState, useEffect } from \"react\";\n\n\nconst Carrousel = ({ element = \"glide\", options, children }) => {\n  const [slider] = useState(new Glide(`.${element}`, options));\n  useEffect(() => {\n    slider.mount();\n\n    // subscribe to an event\n    slider.on(\"run.before\", (event) => {\n      // ... do something cool here\n    });\n\n    // cleanup when unmounting component\n    return () => slider.destroy();\n  }, []);\n  return (\n    <div className={element}>\n      <div className=\"glide__track\" data-glide-el=\"track\">\n        <ul className=\"glide__slides\">\n          {children.map((slide, index) => {\n            return React.cloneElement(slide, {\n              key: index,\n              className: `${slide.props.className} glide__slide`,\n            });\n          })}\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nexport default Carrousel;"]},"metadata":{},"sourceType":"module"}